{# //////////////////// #}
{# Si l'utilisateur est connecté, récupérer ses informations #}
{% set emailDepuisCookie = craft.app.session.get('loggedInGensId') %}

{# Vérifier si l'utilisateur est connecté #}
{% if emailDepuisCookie is not null %}
    {% set user = craft.entries().id(emailDepuisCookie).one() %}
{# {% else %}
    {% set user = craft.entries().id(257).one() %} #}
{% endif %}
{# ///////////////////// #}



{% block content %}
{% include "samfr/gens/menu.twig" %}



{% set v = craft.entries()
    .section('versionmoment')
    .id(craft.app.request.getSegment(2))
    .one() %}

{% if v %}
    {% set n = craft.entries()
    .section('note')
    .versionmoment(v.id)
    .orderBy('dateCreated DESC')
    .all() %}


<h3>{{ v.moment[0].title }}</h3>

{% if n %}
{% set azer = 0 %}
{% for note in n %}
    <div class="card card-body m-2">
        <p>V {{ note.dateCreated|date("d/m/Y") }}</p>

        <div>
            {% set i = craft.entries()
                .section('image')
                .obj(note.id)
                .all() %}

            {% if i %}
            
                {% for item in i %}
                    {% set image = item.img[0] %}

                    <img src="{{ image.getUrl({width: 120, height: 120, mode: 'crop'}) }}" {# Taille image source légèrement plus grande, qualité ajustée #}
                    alt="{{ image.alt ?? image.title ?? action.title }}"
                    class="img-fluid rounded-start" {# img-fluid + w/h-100 + object-fit pour remplir #}
                    style="object-fit: cover;     height: 120px;
        width: 120px;">
                {% endfor %}
            

                {# Affichage de l'image avec une taille et qualité ajustées #}
                
            {% else %}
                {# Placeholder si pas d'image #}
                <div class="bg-light rounded-start w-100 h-100 d-flex align-items-center justify-content-center">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-image text-muted" viewBox="0 0 16 16">
                        <path d="M6.002 5.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/>
                        <path d="M2.002 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2h-12zm12 1a1 1 0 0 1 1 1v6.5l-3.777-1.947a.5.5 0 0 0-.577.093l-3.71 3.71-2.66-1.772a.5.5 0 0 0-.63.062L1.002 12V3a1 1 0 0 1 1-1h12z"/>
                    </svg>
                </div>
            {% endif %}

            {% if azer == 0 %}
            
                <button onclick="addimg({{ note.id }})" class="btn btn-primary">
                    add img
                </button>

            {% endif %}
        </div>

    <div class="card card-body border-top pt-2 mt-2">
        {% set t = craft.entries()
            .section('texte')
            .obj(note.id)
            .orderBy('dateCreated DESC')
            .all() %}

        {% set groupedByGens = t | group('gens[0].title') %}

        {# 3. Loop through the grouped entries to display them.
        We loop through 'groupedByGens' where 'groupTitle' will be the name of the person ('gens'),
        and 'entriesInGroup' will be all the 'texte' entries associated with them.
        #}
        {# On initialise le drapeau. Il passera à `false` si on trouve une note de l'utilisateur. #}
{% set dejala = true %}

{# On boucle sur les entrées qui ont été préalablement groupées par auteur. #}
{% for groupTitle, entriesInGroup in groupedByGens %}
    <div class="person-group">

        {# On affiche le nom de l'auteur pour ce groupe. #}
        <h2 class="person-name">{{ groupTitle }}</h2>

        {# On affiche chaque texte de ce groupe. #}
        {% for entry in entriesInGroup|reverse %}
            <h6>{{ entry.title }}</h6>
        {% endfor %}

        {#
          CORRECTION CLÉ :
          On vérifie si l'utilisateur est connecté ET si l'auteur du premier
          élément de ce groupe (`entriesInGroup[0]`) est bien l'utilisateur.
        #}
        {% if azer == 0 and user and entriesInGroup[0].gens.one() and entriesInGroup[0].gens.one().id == user.id %}
            {# Si c'est le cas, on met le drapeau à `false`... #}
            {% set dejala = false %}

            {# ...et on affiche le bouton pour compléter. #}
            <button onclick="addsa({{ note.id }})" class="btn btn-primary">
                Complétez votre note
            </button>
        {% endif %}
    </div>
{% endfor %}

{#
  Après la boucle, vous pouvez utiliser la variable `dejala`.
  Si elle est toujours `true`, cela signifie que l'utilisateur n'avait aucune note.
#}
{% if azer == 0 and user and dejala %}
    <button onclick="addsa({{ note.id }})" class="btn btn-primary">
        Ajouter votre note
    </button>
{% endif %}

    </div>
</div>
{% set azer = azer + 1 %}
{% endfor %}
{% endif %}


{% include "samfr/moment/notecreate.twig" with {
    v: v
} %}



{% endif %}






{% endblock %}